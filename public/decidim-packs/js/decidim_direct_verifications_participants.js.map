{"version":3,"file":"js/decidim_direct_verifications_participants.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAcA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://app/../../../../.rbenv/versions/2.7.3/lib/ruby/gems/2.7.0/gems/decidim-direct_verifications-1.2.1/app/packs/src/decidim/direct_verifications/admin/participants.js","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/compat get default export","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/make namespace object","webpack://app/../../../../.rbenv/versions/2.7.3/lib/ruby/gems/2.7.0/gems/decidim-direct_verifications-1.2.1/app/packs/entrypoints/decidim_direct_verifications_participants.js"],"sourcesContent":["class VerificationUI {\n  constructor($table, config) {\n    this.$table = $table;\n    this.svgPath = $table.find(\"use[href]:first\").attr(\"href\").split(\"#\")[0];\n    this.icon = \"icon-key\";\n    this.config = config;\n    this.$table.on(\"click\", \".show-verifications-modal\", (e) => this.toggleModal(e));\n    this.addModal();\n  }\n\n  addModal() {\n    this.$modal = $(`<div class=\"reveal\" id=\"show-verifications-modal\" data-reveal>\n  <div class=\"reveal__header\">\n    <h3 class=\"reveal__title\">${this.config.modalTitle}</h3>\n    <button class=\"close-button\" data-close aria-label=\"${this.config.closeModalLabel}\"\n      type=\"button\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"columns medium-4 medium-centered modal-body\">\n    </div>\n  </div>\n</div>`);\n    this.$table.after(this.$modal);\n    this.$title = $(\"#user-groups .card-title:first\");\n    this.$modalBody = this.$modal.find(\".modal-body\");\n    this.reveal = new Foundation.Reveal(this.$modal);\n  }\n\n  drawButtons() {\n    this.$table.find(\"tbody tr\").each((idx, tr) => {\n      const $lastTd = $(tr).find(\"td:last\");\n\n      $lastTd.prepend(`<a class=\"action-icon action-icon action-icon show-verifications-modal\" title=\"${this.config.buttonTitle}\" href=\"#open-show-verifications-modal\"><span class=\"has-tip ${this.getTrStatus(tr)}\"><svg aria-label=\"${this.config.buttonTitle}\" role=\"img\" class=\"icon--ban icon\">\n        <title>${this.config.buttonTitle}</title>\n        <use href=\"${this.svgPath}#${this.icon}\"></use>\n        </svg></span></a>`);\n    });\n  }\n\n  addStatsTitle() {\n    // Add upper link to verification stats\n    const $a = $(`<a class=\"button tiny button--title\" href=\"${this.config.statsPath}\">${this.config.statsLabel}</a>`);\n    $a.on(\"click\", (e) => {\n      e.preventDefault();\n      this.loadUrl($a.attr(\"href\"), true);\n    });\n    this.$title.append($a);\n  }\n\n  getTrStatus(tr) {\n    return this.getUserVerifications($(tr).data(\"user-id\")).length\n      ? \"alert\"\n      : \"\";\n  }\n\n  getVerification(id) {\n    return this.config.verifications.find((auth) => auth.id == id);\n  }\n\n  getUserVerifications(userId) {\n    return this.config.verifications.filter((auth) => auth.userId == userId);\n  }\n\n  toggleModal(e) {\n    const userId = $(e.target).closest(\"tr\").data(\"user-id\");\n    this.loadUrl(this.config.userVerificationsPath.replace(\"-ID-\", userId));\n  }\n\n  loadUrl(url, large = false) {\n    this.$modal.removeClass(\"large\");\n    if (large) {\n      this.$modal.addClass(\"large\");\n    }\n    this.$modalBody.html('<span class=\"loading-spinner\"></span>');\n    this.$modalBody.load(url);\n    this.$modal.foundation(\"toggle\");\n  }\n}\n\n$(() => {\n  const ui = new VerificationUI($(\"#user-groups table.table-list\"), DirectVerificationsConfig);\n  // Draw the icon buttons for checking verification statuses\n  ui.drawButtons();\n  ui.addStatsTitle();\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"src/decidim/direct_verifications/admin/participants.js\"\n"],"names":[],"sourceRoot":""}